[ { "title": "How to install or Update GoLang in Kali Linux", "url": "/posts/installing-or-updating-golang-in-kali-linux/", "categories": "Go Tutorial", "tags": "Kali Linux, Golang, Go, Update, gopls, VSCODE", "date": "2022-05-02 20:10:00 +0000", "snippet": "This post will guide you on how to install or upgrade to GO 1.81 in Kali Linux. If this is your first time installing kindly skip to Installing Go. What is Go Getting ready to Update Go Installing Go Possible Bugs and FixesWhat is GoGo (or GoLang) is a modern programming language originally developedby Google that uses high-level syntax similar to scripting languages. It ispopular for its minimal syntax and innovative handling of concurrency, aswell as for the tools it provides for building native binaries on foreignplatforms.Installing Go is a quite straight-forward process.Let’s begin….Getting ready to Update Go Please skip this part if you don’t have Go configured on your computer.In this part, we will removing or renaming existing Go files.This will prevent any file collision.Firstly let’s find where the go binary was previously installed:which go# /usr/share/go-1.14/bin/go You can either choose to delete or rename this file; I recommend you just rename it should things go wrong, you can just revert back by renaming it to it’s initial name.To delete this file:sudo rm -rf /usr/share/go-1.14/bin/goTo rename this file:sudo mv /usr/share/go-1.14/bin/go /usr/share/go-1.14/bin/go.bak# This file will be renamed to go.bakNow you are ready to begin installation of the latest Go version.Installing GoTo install the latest Go binary kindly visit the official Go download page.You are to choose the Linux file go1.18.1.linux-amd64.tar.gzonce downloaded, go into the directory the file was downloaded into.If you don’t know where this:locate go1.18.1.linux-amd64.tar.gz#/home/kali/Downloads/go1.18.1.linux-amd64.tar.gzNow go into the directory:cd /home/kali/Downloads/Next, Let’s extract the file and save it in /usr/local/:tar -C /usr/local/ -xzf go1.18.1.linux-amd64.tar.gzNow let’s create the necessary environment variables required for Go to run smoothly.To do this:Open your .zshrc file with the nano editornano ~/.zshrcnow go down at the end of the file and add:#go variablesexport GOPATH=$HOME/goexport GOROOT=&quot;/usr/local/go&quot;PATH=&quot;$PATH:$GOROOT/bin:$GOPATH/bin&quot;CTRL + O and hit the Enter Key to save the file:Finally, activate your new .zshrc configuration.To do this:source ~/.zshrcYou should have Go installed.Let’s quickly confirm by checking it’s version.To do this:go version#go version go1.18.1 linux/amd64Possible Bugs and FixesIf you use VSCODE, you may encounter this errorundeclared name: any (compile)This issue is caused by GOPLSTo fix this, you can Update the VSCode extension by:CTRL + P and typing “Go: Install/update Tools” Update it manually by first deleting the old GOPLS and reinstalling manuallyTo delete:rm $GOPATH/bin/goplsrm -r $GOPATH/src/golang.org/x/tools/goplsTo reinstall:go get -v golang.org/x/tools/goplsNow everything should work fine.Happy Coding!!!" }, { "title": "ABC Conference CyberHackathon CTF Write-Up", "url": "/posts/abcctf-web-challenges/", "categories": "CTF", "tags": "Web", "date": "2021-08-28 00:00:00 +0000", "snippet": "Dear Reader,Today, you are going be reading how my team and I solved the The American Business Council Cyber-Hackathon Easy Peasy web-based challenge.1. Easy Peasy:On clicking the link provided for the challenge, A Login Page is displayed.Naturally, seeing a login page in a CTF, three things came to mind at first SQL Injection, Bruteforcing for default credentials and IDOR(Insecure Direct Object Reference) vulnerabilities.But Firstly before delving into all the good stuff, I needed to gather surface level knowlege on what this website runs on. To do this I use the Whatweb tool preinstalled in Kali Linux.Now I know: It runs on a Apache(2.4.48) server. The Host is a Linux(Debian) Machine. It runs on PHP(7.4.22).Although this information was irrelvant to solving this challenge, it is good practice to always enumerate as much as possible because: Enumeration is the most critical part of all. The art, the difficulty, and the goal are not to gain access to our target computer. Instead, it is identifying all of the ways we could attack a target we must find.While running quick tests on the vulnerabilities I highlighted previously, I ran FFUF in the backround. FFUF is a Fast Web Fuzzer written in go.ffuf -u &quot;http://185.203.119.50:4200/FUZZ&quot; -w ~/wordlist/common.txtFrom the result below, all other directories returned either status codes 403, 200, 301 or 404.Of all other status codes, The directory with the status code 301 i.e /dev stood out.From experience, I decided to run a recursive scan on that directory using FFUF again!ffuf -u &quot;http://185.203.119.50:4200/dev/FUZZ&quot; -w ~/wordlist/common.txtWith the result came a new web page.On visiting this new web page in the browser.An almost blank page with inscription: Hey champ, there is nothing funny here!Was that really all there is?, Have I been trolled? well, Let’s take a quick look at the page’s source code.Viewing the page source code we get this: A hint(to be used later) A variable _0x26a3 with values that match Hex.Quickly converting this to it’s ASCII eqivalent, we get:Now we have this text, How do we use it, well we have a hint. By the way, we have created a nice login page in PHP. Go find it outLet’s use FFUF to find files with the .php extention.ffuf -u &quot;http://185.203.119.50:4200/dev/FUZZ&quot; -w ~/wordlist/common.txt -e .phpWe get a new page:Viewing this page in a browser, Another Login page is displayed with just a password field.Let’s try slapping in that string we found earlier; We get redirected to another page /about_to_win_page.htmlAfter waiting a few seconds for some sort of grand reveal of the FLAG, it dawned on us that there was still more to do.Viewing the page source code we attempted to download the image on the web page and decided to view the EXIF data of the image using Exiftool.wget http://185.203.119.50:4200/AboutToWin.jpgAfterwards running the Exiftool:exiftool AboutToWin.jpgWe found this:Looks like an html file? let’s take a look at it;This must be it…..FLAGabcctf{H4cKiNG_i$_FuN_K33P_L34RN1NG}" } ]
